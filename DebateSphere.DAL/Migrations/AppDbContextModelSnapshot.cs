// <auto-generated />
using System;
using DebateSphere.DAL;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace DebateSphere.DAL.Migrations
{
    [DbContext(typeof(AppDbContext))]
    partial class AppDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.8")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("DebateSphere.Models.Argument", b =>
                {
                    b.Property<int>("ArgumentID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ArgumentID"));

                    b.Property<string>("Content")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValueSql("GETDATE()");

                    b.Property<int>("DebateID")
                        .HasColumnType("int");

                    b.Property<int>("PostedBy")
                        .HasColumnType("int");

                    b.Property<int>("Side")
                        .HasColumnType("int");

                    b.HasKey("ArgumentID");

                    b.HasIndex("DebateID");

                    b.HasIndex("PostedBy");

                    b.ToTable("Arguments");
                });

            modelBuilder.Entity("DebateSphere.Models.Debate", b =>
                {
                    b.Property<int>("DebateID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("DebateID"));

                    b.Property<DateTime>("CreatedAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValueSql("GETDATE()");

                    b.Property<int>("CreatedBy")
                        .HasColumnType("int");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("DebateID");

                    b.HasIndex("CreatedBy");

                    b.ToTable("Debates");
                });

            modelBuilder.Entity("DebateSphere.Models.User", b =>
                {
                    b.Property<int>("UserID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("UserID"));

                    b.Property<DateTime>("CreatedAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValueSql("GETDATE()");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Username")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("UserID");

                    b.HasIndex("Email")
                        .IsUnique();

                    b.HasIndex("Username")
                        .IsUnique();

                    b.ToTable("Users");
                });

            modelBuilder.Entity("DebateSphere.Models.Vote", b =>
                {
                    b.Property<int>("VoteID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("VoteID"));

                    b.Property<DateTime>("CreatedAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValueSql("GETDATE()");

                    b.Property<int>("DebateID")
                        .HasColumnType("int");

                    b.Property<int>("VotedSide")
                        .HasColumnType("int");

                    b.Property<int>("VoterID")
                        .HasColumnType("int");

                    b.HasKey("VoteID");

                    b.HasIndex("VoterID");

                    b.HasIndex("DebateID", "VoterID")
                        .IsUnique();

                    b.ToTable("Votes");
                });

            modelBuilder.Entity("DebateSphere.Models.Argument", b =>
                {
                    b.HasOne("DebateSphere.Models.Debate", "Debate")
                        .WithMany("Arguments")
                        .HasForeignKey("DebateID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("DebateSphere.Models.User", "User")
                        .WithMany("Arguments")
                        .HasForeignKey("PostedBy")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Debate");

                    b.Navigation("User");
                });

            modelBuilder.Entity("DebateSphere.Models.Debate", b =>
                {
                    b.HasOne("DebateSphere.Models.User", "User")
                        .WithMany("Debates")
                        .HasForeignKey("CreatedBy")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("User");
                });

            modelBuilder.Entity("DebateSphere.Models.Vote", b =>
                {
                    b.HasOne("DebateSphere.Models.Debate", "Debate")
                        .WithMany("Votes")
                        .HasForeignKey("DebateID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("DebateSphere.Models.User", "User")
                        .WithMany("Votes")
                        .HasForeignKey("VoterID")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Debate");

                    b.Navigation("User");
                });

            modelBuilder.Entity("DebateSphere.Models.Debate", b =>
                {
                    b.Navigation("Arguments");

                    b.Navigation("Votes");
                });

            modelBuilder.Entity("DebateSphere.Models.User", b =>
                {
                    b.Navigation("Arguments");

                    b.Navigation("Debates");

                    b.Navigation("Votes");
                });
#pragma warning restore 612, 618
        }
    }
}
